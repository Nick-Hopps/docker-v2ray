(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{355:function(s,a,e){"use strict";e.r(a);var t=e(43),r=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"进阶教程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进阶教程"}},[s._v("#")]),s._v(" 进阶教程")]),s._v(" "),e("h2",{attrs:{id:"方案介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方案介绍"}},[s._v("#")]),s._v(" 方案介绍")]),s._v(" "),e("p",[s._v("此次部署使用的是 Vmess + TCP + TLS + Web 的方案，参考"),e("a",{attrs:{href:"https://guide.v2fly.org/advanced/tcp_tls_web.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("新 V2Ray 白话文指南"),e("OutboundLink")],1),s._v("中给出的配置，并将该套配置容器化，以便实现一键部署。其中 Vmess + TCP 是 V2ray 的默认配置，在这基础上对流量进行 TLS 加密，并配合一个 Web 页面进行伪装，以便实现速度和安全的平衡。")]),s._v(" "),e("p",[s._v("该方案的工作流程：HAProxy 监听本地 443 端口，对收到的所有流量进行分流，其中 HTTP 流量转发到 Nginx，其他的 TCP 流量转发到 V2ray。")]),s._v(" "),e("h2",{attrs:{id:"部署方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署方法"}},[s._v("#")]),s._v(" 部署方法")]),s._v(" "),e("p",[s._v("首先下载配置文件："),e("a",{attrs:{href:"https://github.com/Nick-Hopps/docker-v2ray",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker-v2ray"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("配置的目录结构如下：")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("├── certbot                   # crontab 定时任务\n├── deploy.sh                 # 部署脚本\n├── docker-compose.yml        # docker-compose 配置\n├── .env                      # 环境变量\n├── etc\n│   ├── haproxy\n│   │   └── haproxy.cfg       # haproxy 的配置\n│   ├── nginx\n│   │   ├── conf.d\n│   │   │   └── default.conf  # nginx 的配置         \n│   │   └── nginx.conf\n│   └── v2ray\n│       └── config.json       # v2ray 的配置\n└── www                       # 网站根目录\n")])])]),e("p",[s._v("需要把 "),e("code",[s._v(".env")]),s._v("，"),e("code",[s._v("deploy.sh")]),s._v("，"),e("code",[s._v("haproxy.cfg")]),s._v("，"),e("code",[s._v("default.conf")]),s._v(' 中的 "example.com" 改成自己的域名，'),e("code",[s._v(".env")]),s._v(' 中的 "test@test.com" 改成自己的邮箱，然后把整套配置文件上传至服务器的 '),e("code",[s._v("/root")]),s._v(" 目录下，如果放到其他目录下，需要在 "),e("code",[s._v("certbot")]),s._v(" 中更改 "),e("code",[s._v("cd /root/docker-v2ray")]),s._v(" 为相对应的目录。")]),s._v(" "),e("h3",{attrs:{id:"安装-docker-ce-和-docker-compose"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker-ce-和-docker-compose"}},[s._v("#")]),s._v(" 安装 docker-ce 和 docker-compose")]),s._v(" "),e("ol",[e("li",[s._v("安装 docker-ce（以 Ubuntu 为例，其余发行版见官网文档）")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fsSL https://get.docker.com -o get-docker.sh\n\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" get-docker.sh\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("安装 docker-compose（linux）")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://github.com/docker/compose/releases/download/1.25.5/docker-compose-'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -s"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("-"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" -o /usr/local/bin/docker-compose\n\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/docker-compose\n")])])]),e("h3",{attrs:{id:"运行部署脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行部署脚本"}},[s._v("#")]),s._v(" 运行部署脚本")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" deploy.sh\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);